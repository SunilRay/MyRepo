name: AI PR Review with OpenAI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get PR diff
        id: get-diff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          DIFF=$(git diff origin/${{ github.event.pull_request.base.ref }}...HEAD)
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Get changed files
        id: changed-files
        run: |
          FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: AI Code Review
        id: ai-review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Create a review prompt
          cat > prompt.txt << 'PROMPT'
          You are an expert code reviewer. Review the following pull request changes and provide:
          1. A summary of changes
          2. Potential issues or bugs
          3. Security concerns
          4. Performance considerations
          5. Code quality suggestions
          6. Best practices recommendations
          
          Be constructive and specific. Format your response in markdown.
          
          Changed files:
          ${{ steps.changed-files.outputs.files }}
          
          Diff:
          ${{ steps.get-diff.outputs.diff }}
          PROMPT
          
          # Call OpenAI API
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-4o",
              "messages": [
                {
                  "role": "system",
                  "content": "You are an expert code reviewer who provides detailed, actionable feedback."
                },
                {
                  "role": "user",
                  "content": "'"$(cat prompt.txt | sed 's/"/\\"/g' | tr '\n' ' ')"'"
                }
              ],
              "temperature": 0.3,
              "max_tokens": 2000
            }')
          
          # Extract the review content
          REVIEW=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Failed to generate review"')
          
          # Save review to file
          echo "$REVIEW" > review.md
          
          # Also save to output
          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Post Review Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review.md', 'utf8');
            
            const comment = `## ðŸ¤– AI Code Review
            
            ${review}
            
            ---
            *This review was automatically generated by OpenAI GPT-4*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });